---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: ldaps.security.nexus.crossplane.io
spec:
  group: security.nexus.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - nexus
    kind: Ldap
    listKind: LdapList
    plural: ldaps
    singular: ldap
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Ldap is the Schema for the Ldaps API. Use this resource to create
          a Nexus Security LDAP configuration.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LdapSpec defines the desired state of Ldap
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  authPasswordSecretRef:
                    description: |-
                      (String, Sensitive) The password to bind with. Required if authScheme other than none.
                      The password to bind with. Required if authScheme other than none.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  authRealm:
                    description: |-
                      (String) The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5
                      The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5
                    type: string
                  authSchema:
                    description: |-
                      (String) Authentication scheme used for connecting to LDAP server
                      Authentication scheme used for connecting to LDAP server
                    type: string
                  authUsername:
                    description: |-
                      (String) This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.
                      This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.
                    type: string
                  connectionRetryDelaySeconds:
                    description: |-
                      (Number) How long to wait before retrying
                      How long to wait before retrying
                    type: number
                  connectionTimeoutSeconds:
                    description: |-
                      (Number) How long to wait before timeout
                      How long to wait before timeout
                    type: number
                  groupBaseDn:
                    description: |-
                      (String) The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to form the full Group search base DN.
                      The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to form the full Group search base DN.
                    type: string
                  groupIdAttribute:
                    description: |-
                      (String) This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static
                      This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static
                    type: string
                  groupMemberAttribute:
                    description: |-
                      (String) LDAP attribute containing the usernames for the group. Required if groupType is static
                      LDAP attribute containing the usernames for the group. Required if groupType is static
                    type: string
                  groupMemberFormat:
                    description: |-
                      (String) The format of user ID stored in the group member attribute. Required if groupType is static
                      The format of user ID stored in the group member attribute. Required if groupType is static
                    type: string
                  groupObjectClass:
                    description: |-
                      (String) LDAP class for group objects. Required if groupType is static
                      LDAP class for group objects. Required if groupType is static
                    type: string
                  groupSubtree:
                    description: |-
                      (Boolean) Are groups located in structures below the group base DN
                      Are groups located in structures below the group base DN
                    type: boolean
                  groupType:
                    description: |-
                      (String) Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups). Required if ldapGroupsAsRoles is true.
                      Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups). Required if ldapGroupsAsRoles is true.
                    type: string
                  host:
                    description: |-
                      (String) LDAP server connection hostname
                      LDAP server connection hostname
                    type: string
                  ldapGroupsAsRoles:
                    description: |-
                      (Boolean) Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles
                      Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles
                    type: boolean
                  maxIncidentCount:
                    description: |-
                      (Number) How many retry attempts
                      How many retry attempts
                    type: number
                  name:
                    description: |-
                      (String) LDAP server name
                      LDAP server name
                    type: string
                  port:
                    description: |-
                      (Number) LDAP server connection port to use
                      LDAP server connection port to use
                    type: number
                  protocol:
                    description: |-
                      (String) LDAP server connection Protocol to use
                      LDAP server connection Protocol to use
                    type: string
                  searchBase:
                    description: |-
                      (String) LDAP location to be added to the connection URL
                      LDAP location to be added to the connection URL
                    type: string
                  useTrustStore:
                    description: |-
                      (Boolean) Whether to use certificates stored in Nexus Repository Manager's truststore
                      Whether to use certificates stored in Nexus Repository Manager's truststore
                    type: boolean
                  userBaseDn:
                    description: |-
                      (String) The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to form the full User search base DN.
                      The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to form the full User search base DN.
                    type: string
                  userEmailAddressAttribute:
                    description: |-
                      (String) This is used to find an email address given the user ID
                      This is used to find an email address given the user ID
                    type: string
                  userIdAttribute:
                    description: |-
                      (String) This is used to find a user given its user ID
                      This is used to find a user given its user ID
                    type: string
                  userLdapFilter:
                    description: |-
                      (String) LDAP search filter to limit user search
                      LDAP search filter to limit user search
                    type: string
                  userMemberOfAttribute:
                    description: |-
                      (String) Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is dynamic
                      Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is dynamic
                    type: string
                  userObjectClass:
                    description: |-
                      (String) LDAP class for user objects
                      LDAP class for user objects
                    type: string
                  userPasswordAttribute:
                    description: |-
                      (String) If this field is blank the user will be authenticated against a bind with the LDAP server
                      If this field is blank the user will be authenticated against a bind with the LDAP server
                    type: string
                  userRealNameAttribute:
                    description: |-
                      (String) This is used to find a real name given the user ID
                      This is used to find a real name given the user ID
                    type: string
                  userSubtree:
                    description: |-
                      (Boolean) Are users located in structures below the user base DN?
                      Are users located in structures below the user base DN?
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  authPasswordSecretRef:
                    description: |-
                      (String, Sensitive) The password to bind with. Required if authScheme other than none.
                      The password to bind with. Required if authScheme other than none.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  authRealm:
                    description: |-
                      (String) The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5
                      The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5
                    type: string
                  authSchema:
                    description: |-
                      (String) Authentication scheme used for connecting to LDAP server
                      Authentication scheme used for connecting to LDAP server
                    type: string
                  authUsername:
                    description: |-
                      (String) This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.
                      This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.
                    type: string
                  connectionRetryDelaySeconds:
                    description: |-
                      (Number) How long to wait before retrying
                      How long to wait before retrying
                    type: number
                  connectionTimeoutSeconds:
                    description: |-
                      (Number) How long to wait before timeout
                      How long to wait before timeout
                    type: number
                  groupBaseDn:
                    description: |-
                      (String) The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to form the full Group search base DN.
                      The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to form the full Group search base DN.
                    type: string
                  groupIdAttribute:
                    description: |-
                      (String) This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static
                      This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static
                    type: string
                  groupMemberAttribute:
                    description: |-
                      (String) LDAP attribute containing the usernames for the group. Required if groupType is static
                      LDAP attribute containing the usernames for the group. Required if groupType is static
                    type: string
                  groupMemberFormat:
                    description: |-
                      (String) The format of user ID stored in the group member attribute. Required if groupType is static
                      The format of user ID stored in the group member attribute. Required if groupType is static
                    type: string
                  groupObjectClass:
                    description: |-
                      (String) LDAP class for group objects. Required if groupType is static
                      LDAP class for group objects. Required if groupType is static
                    type: string
                  groupSubtree:
                    description: |-
                      (Boolean) Are groups located in structures below the group base DN
                      Are groups located in structures below the group base DN
                    type: boolean
                  groupType:
                    description: |-
                      (String) Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups). Required if ldapGroupsAsRoles is true.
                      Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups). Required if ldapGroupsAsRoles is true.
                    type: string
                  host:
                    description: |-
                      (String) LDAP server connection hostname
                      LDAP server connection hostname
                    type: string
                  ldapGroupsAsRoles:
                    description: |-
                      (Boolean) Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles
                      Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles
                    type: boolean
                  maxIncidentCount:
                    description: |-
                      (Number) How many retry attempts
                      How many retry attempts
                    type: number
                  name:
                    description: |-
                      (String) LDAP server name
                      LDAP server name
                    type: string
                  port:
                    description: |-
                      (Number) LDAP server connection port to use
                      LDAP server connection port to use
                    type: number
                  protocol:
                    description: |-
                      (String) LDAP server connection Protocol to use
                      LDAP server connection Protocol to use
                    type: string
                  searchBase:
                    description: |-
                      (String) LDAP location to be added to the connection URL
                      LDAP location to be added to the connection URL
                    type: string
                  useTrustStore:
                    description: |-
                      (Boolean) Whether to use certificates stored in Nexus Repository Manager's truststore
                      Whether to use certificates stored in Nexus Repository Manager's truststore
                    type: boolean
                  userBaseDn:
                    description: |-
                      (String) The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to form the full User search base DN.
                      The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to form the full User search base DN.
                    type: string
                  userEmailAddressAttribute:
                    description: |-
                      (String) This is used to find an email address given the user ID
                      This is used to find an email address given the user ID
                    type: string
                  userIdAttribute:
                    description: |-
                      (String) This is used to find a user given its user ID
                      This is used to find a user given its user ID
                    type: string
                  userLdapFilter:
                    description: |-
                      (String) LDAP search filter to limit user search
                      LDAP search filter to limit user search
                    type: string
                  userMemberOfAttribute:
                    description: |-
                      (String) Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is dynamic
                      Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is dynamic
                    type: string
                  userObjectClass:
                    description: |-
                      (String) LDAP class for user objects
                      LDAP class for user objects
                    type: string
                  userPasswordAttribute:
                    description: |-
                      (String) If this field is blank the user will be authenticated against a bind with the LDAP server
                      If this field is blank the user will be authenticated against a bind with the LDAP server
                    type: string
                  userRealNameAttribute:
                    description: |-
                      (String) This is used to find a real name given the user ID
                      This is used to find a real name given the user ID
                    type: string
                  userSubtree:
                    description: |-
                      (Boolean) Are users located in structures below the user base DN?
                      Are users located in structures below the user base DN?
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.authSchema is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.authSchema)
                || (has(self.initProvider) && has(self.initProvider.authSchema))'
            - message: spec.forProvider.authUsername is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.authUsername)
                || (has(self.initProvider) && has(self.initProvider.authUsername))'
            - message: spec.forProvider.connectionRetryDelaySeconds is a required
                parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.connectionRetryDelaySeconds)
                || (has(self.initProvider) && has(self.initProvider.connectionRetryDelaySeconds))'
            - message: spec.forProvider.connectionTimeoutSeconds is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.connectionTimeoutSeconds)
                || (has(self.initProvider) && has(self.initProvider.connectionTimeoutSeconds))'
            - message: spec.forProvider.groupType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.groupType)
                || (has(self.initProvider) && has(self.initProvider.groupType))'
            - message: spec.forProvider.host is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.host)
                || (has(self.initProvider) && has(self.initProvider.host))'
            - message: spec.forProvider.maxIncidentCount is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.maxIncidentCount)
                || (has(self.initProvider) && has(self.initProvider.maxIncidentCount))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.port is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.port)
                || (has(self.initProvider) && has(self.initProvider.port))'
            - message: spec.forProvider.protocol is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.protocol)
                || (has(self.initProvider) && has(self.initProvider.protocol))'
            - message: spec.forProvider.searchBase is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.searchBase)
                || (has(self.initProvider) && has(self.initProvider.searchBase))'
          status:
            description: LdapStatus defines the observed state of Ldap.
            properties:
              atProvider:
                properties:
                  authRealm:
                    description: |-
                      (String) The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5
                      The SASL realm to bind to. Required if authScheme is CRAM_MD5 or DIGEST_MD5
                    type: string
                  authSchema:
                    description: |-
                      (String) Authentication scheme used for connecting to LDAP server
                      Authentication scheme used for connecting to LDAP server
                    type: string
                  authUsername:
                    description: |-
                      (String) This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.
                      This must be a fully qualified username if simple authentication is used. Required if authScheme other than none.
                    type: string
                  connectionRetryDelaySeconds:
                    description: |-
                      (Number) How long to wait before retrying
                      How long to wait before retrying
                    type: number
                  connectionTimeoutSeconds:
                    description: |-
                      (Number) How long to wait before timeout
                      How long to wait before timeout
                    type: number
                  groupBaseDn:
                    description: |-
                      (String) The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to form the full Group search base DN.
                      The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to form the full Group search base DN.
                    type: string
                  groupIdAttribute:
                    description: |-
                      (String) This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static
                      This field specifies the attribute of the Object class that defines the Group ID. Required if groupType is static
                    type: string
                  groupMemberAttribute:
                    description: |-
                      (String) LDAP attribute containing the usernames for the group. Required if groupType is static
                      LDAP attribute containing the usernames for the group. Required if groupType is static
                    type: string
                  groupMemberFormat:
                    description: |-
                      (String) The format of user ID stored in the group member attribute. Required if groupType is static
                      The format of user ID stored in the group member attribute. Required if groupType is static
                    type: string
                  groupObjectClass:
                    description: |-
                      (String) LDAP class for group objects. Required if groupType is static
                      LDAP class for group objects. Required if groupType is static
                    type: string
                  groupSubtree:
                    description: |-
                      (Boolean) Are groups located in structures below the group base DN
                      Are groups located in structures below the group base DN
                    type: boolean
                  groupType:
                    description: |-
                      (String) Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups). Required if ldapGroupsAsRoles is true.
                      Defines a type of groups used: static (a group contains a list of users) or dynamic (a user contains a list of groups). Required if ldapGroupsAsRoles is true.
                    type: string
                  host:
                    description: |-
                      (String) LDAP server connection hostname
                      LDAP server connection hostname
                    type: string
                  id:
                    description: (String) Used to identify resource at nexus
                    type: string
                  ldapGroupsAsRoles:
                    description: |-
                      (Boolean) Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles
                      Denotes whether LDAP assigned roles are used as Nexus Repository Manager roles
                    type: boolean
                  maxIncidentCount:
                    description: |-
                      (Number) How many retry attempts
                      How many retry attempts
                    type: number
                  name:
                    description: |-
                      (String) LDAP server name
                      LDAP server name
                    type: string
                  port:
                    description: |-
                      (Number) LDAP server connection port to use
                      LDAP server connection port to use
                    type: number
                  protocol:
                    description: |-
                      (String) LDAP server connection Protocol to use
                      LDAP server connection Protocol to use
                    type: string
                  searchBase:
                    description: |-
                      (String) LDAP location to be added to the connection URL
                      LDAP location to be added to the connection URL
                    type: string
                  useTrustStore:
                    description: |-
                      (Boolean) Whether to use certificates stored in Nexus Repository Manager's truststore
                      Whether to use certificates stored in Nexus Repository Manager's truststore
                    type: boolean
                  userBaseDn:
                    description: |-
                      (String) The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to form the full User search base DN.
                      The relative DN where user objects are found (e.g. ou=people). This value will have the Search base DN value appended to form the full User search base DN.
                    type: string
                  userEmailAddressAttribute:
                    description: |-
                      (String) This is used to find an email address given the user ID
                      This is used to find an email address given the user ID
                    type: string
                  userIdAttribute:
                    description: |-
                      (String) This is used to find a user given its user ID
                      This is used to find a user given its user ID
                    type: string
                  userLdapFilter:
                    description: |-
                      (String) LDAP search filter to limit user search
                      LDAP search filter to limit user search
                    type: string
                  userMemberOfAttribute:
                    description: |-
                      (String) Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is dynamic
                      Set this to the attribute used to store the attribute which holds groups DN in the user object. Required if groupType is dynamic
                    type: string
                  userObjectClass:
                    description: |-
                      (String) LDAP class for user objects
                      LDAP class for user objects
                    type: string
                  userPasswordAttribute:
                    description: |-
                      (String) If this field is blank the user will be authenticated against a bind with the LDAP server
                      If this field is blank the user will be authenticated against a bind with the LDAP server
                    type: string
                  userRealNameAttribute:
                    description: |-
                      (String) This is used to find a real name given the user ID
                      This is used to find a real name given the user ID
                    type: string
                  userSubtree:
                    description: |-
                      (Boolean) Are users located in structures below the user base DN?
                      Are users located in structures below the user base DN?
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
